<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.bupt.ipoc.onps.dao.TrafficRoutePOMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.bupt.ipoc.onps.model.po.TrafficRoutePO" >
    <constructor >
      <idArg column="id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="from_node_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="to_node_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="rate" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="layer" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="traffic_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="hop" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="length" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="value" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="success" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="reliability" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="link_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="route_sequence" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="source_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="type" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="from_port_source_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="to_port_source_id" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, from_node_id, to_node_id, rate, layer, traffic_id, hop, length, value, success, 
    reliability, link_id, route_sequence, source_id, type, from_port_source_id, to_port_source_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.bupt.ipoc.onps.model.po.TrafficRoutePOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from traffic_route
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from traffic_route
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from traffic_route
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.bupt.ipoc.onps.model.po.TrafficRoutePOExample" >
    delete from traffic_route
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.bupt.ipoc.onps.model.po.TrafficRoutePO" >
    insert into traffic_route (id, from_node_id, to_node_id, 
      rate, layer, traffic_id, 
      hop, length, value, 
      success, reliability, link_id, 
      route_sequence, source_id, type, 
      from_port_source_id, to_port_source_id)
    values (#{id,jdbcType=VARCHAR}, #{fromNodeId,jdbcType=VARCHAR}, #{toNodeId,jdbcType=VARCHAR}, 
      #{rate,jdbcType=VARCHAR}, #{layer,jdbcType=VARCHAR}, #{trafficId,jdbcType=VARCHAR}, 
      #{hop,jdbcType=INTEGER}, #{length,jdbcType=INTEGER}, #{value,jdbcType=INTEGER}, 
      #{success,jdbcType=INTEGER}, #{reliability,jdbcType=DOUBLE}, #{linkId,jdbcType=VARCHAR}, 
      #{routeSequence,jdbcType=INTEGER}, #{sourceId,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{fromPortSourceId,jdbcType=VARCHAR}, #{toPortSourceId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.bupt.ipoc.onps.model.po.TrafficRoutePO" >
    insert into traffic_route
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fromNodeId != null" >
        from_node_id,
      </if>
      <if test="toNodeId != null" >
        to_node_id,
      </if>
      <if test="rate != null" >
        rate,
      </if>
      <if test="layer != null" >
        layer,
      </if>
      <if test="trafficId != null" >
        traffic_id,
      </if>
      <if test="hop != null" >
        hop,
      </if>
      <if test="length != null" >
        length,
      </if>
      <if test="value != null" >
        value,
      </if>
      <if test="success != null" >
        success,
      </if>
      <if test="reliability != null" >
        reliability,
      </if>
      <if test="linkId != null" >
        link_id,
      </if>
      <if test="routeSequence != null" >
        route_sequence,
      </if>
      <if test="sourceId != null" >
        source_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="fromPortSourceId != null" >
        from_port_source_id,
      </if>
      <if test="toPortSourceId != null" >
        to_port_source_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="fromNodeId != null" >
        #{fromNodeId,jdbcType=VARCHAR},
      </if>
      <if test="toNodeId != null" >
        #{toNodeId,jdbcType=VARCHAR},
      </if>
      <if test="rate != null" >
        #{rate,jdbcType=VARCHAR},
      </if>
      <if test="layer != null" >
        #{layer,jdbcType=VARCHAR},
      </if>
      <if test="trafficId != null" >
        #{trafficId,jdbcType=VARCHAR},
      </if>
      <if test="hop != null" >
        #{hop,jdbcType=INTEGER},
      </if>
      <if test="length != null" >
        #{length,jdbcType=INTEGER},
      </if>
      <if test="value != null" >
        #{value,jdbcType=INTEGER},
      </if>
      <if test="success != null" >
        #{success,jdbcType=INTEGER},
      </if>
      <if test="reliability != null" >
        #{reliability,jdbcType=DOUBLE},
      </if>
      <if test="linkId != null" >
        #{linkId,jdbcType=VARCHAR},
      </if>
      <if test="routeSequence != null" >
        #{routeSequence,jdbcType=INTEGER},
      </if>
      <if test="sourceId != null" >
        #{sourceId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="fromPortSourceId != null" >
        #{fromPortSourceId,jdbcType=VARCHAR},
      </if>
      <if test="toPortSourceId != null" >
        #{toPortSourceId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.bupt.ipoc.onps.model.po.TrafficRoutePOExample" resultType="java.lang.Integer" >
    select count(*) from traffic_route
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update traffic_route
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.fromNodeId != null" >
        from_node_id = #{record.fromNodeId,jdbcType=VARCHAR},
      </if>
      <if test="record.toNodeId != null" >
        to_node_id = #{record.toNodeId,jdbcType=VARCHAR},
      </if>
      <if test="record.rate != null" >
        rate = #{record.rate,jdbcType=VARCHAR},
      </if>
      <if test="record.layer != null" >
        layer = #{record.layer,jdbcType=VARCHAR},
      </if>
      <if test="record.trafficId != null" >
        traffic_id = #{record.trafficId,jdbcType=VARCHAR},
      </if>
      <if test="record.hop != null" >
        hop = #{record.hop,jdbcType=INTEGER},
      </if>
      <if test="record.length != null" >
        length = #{record.length,jdbcType=INTEGER},
      </if>
      <if test="record.value != null" >
        value = #{record.value,jdbcType=INTEGER},
      </if>
      <if test="record.success != null" >
        success = #{record.success,jdbcType=INTEGER},
      </if>
      <if test="record.reliability != null" >
        reliability = #{record.reliability,jdbcType=DOUBLE},
      </if>
      <if test="record.linkId != null" >
        link_id = #{record.linkId,jdbcType=VARCHAR},
      </if>
      <if test="record.routeSequence != null" >
        route_sequence = #{record.routeSequence,jdbcType=INTEGER},
      </if>
      <if test="record.sourceId != null" >
        source_id = #{record.sourceId,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.fromPortSourceId != null" >
        from_port_source_id = #{record.fromPortSourceId,jdbcType=VARCHAR},
      </if>
      <if test="record.toPortSourceId != null" >
        to_port_source_id = #{record.toPortSourceId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update traffic_route
    set id = #{record.id,jdbcType=VARCHAR},
      from_node_id = #{record.fromNodeId,jdbcType=VARCHAR},
      to_node_id = #{record.toNodeId,jdbcType=VARCHAR},
      rate = #{record.rate,jdbcType=VARCHAR},
      layer = #{record.layer,jdbcType=VARCHAR},
      traffic_id = #{record.trafficId,jdbcType=VARCHAR},
      hop = #{record.hop,jdbcType=INTEGER},
      length = #{record.length,jdbcType=INTEGER},
      value = #{record.value,jdbcType=INTEGER},
      success = #{record.success,jdbcType=INTEGER},
      reliability = #{record.reliability,jdbcType=DOUBLE},
      link_id = #{record.linkId,jdbcType=VARCHAR},
      route_sequence = #{record.routeSequence,jdbcType=INTEGER},
      source_id = #{record.sourceId,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      from_port_source_id = #{record.fromPortSourceId,jdbcType=VARCHAR},
      to_port_source_id = #{record.toPortSourceId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.bupt.ipoc.onps.model.po.TrafficRoutePO" >
    update traffic_route
    <set >
      <if test="fromNodeId != null" >
        from_node_id = #{fromNodeId,jdbcType=VARCHAR},
      </if>
      <if test="toNodeId != null" >
        to_node_id = #{toNodeId,jdbcType=VARCHAR},
      </if>
      <if test="rate != null" >
        rate = #{rate,jdbcType=VARCHAR},
      </if>
      <if test="layer != null" >
        layer = #{layer,jdbcType=VARCHAR},
      </if>
      <if test="trafficId != null" >
        traffic_id = #{trafficId,jdbcType=VARCHAR},
      </if>
      <if test="hop != null" >
        hop = #{hop,jdbcType=INTEGER},
      </if>
      <if test="length != null" >
        length = #{length,jdbcType=INTEGER},
      </if>
      <if test="value != null" >
        value = #{value,jdbcType=INTEGER},
      </if>
      <if test="success != null" >
        success = #{success,jdbcType=INTEGER},
      </if>
      <if test="reliability != null" >
        reliability = #{reliability,jdbcType=DOUBLE},
      </if>
      <if test="linkId != null" >
        link_id = #{linkId,jdbcType=VARCHAR},
      </if>
      <if test="routeSequence != null" >
        route_sequence = #{routeSequence,jdbcType=INTEGER},
      </if>
      <if test="sourceId != null" >
        source_id = #{sourceId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="fromPortSourceId != null" >
        from_port_source_id = #{fromPortSourceId,jdbcType=VARCHAR},
      </if>
      <if test="toPortSourceId != null" >
        to_port_source_id = #{toPortSourceId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.bupt.ipoc.onps.model.po.TrafficRoutePO" >
    update traffic_route
    set from_node_id = #{fromNodeId,jdbcType=VARCHAR},
      to_node_id = #{toNodeId,jdbcType=VARCHAR},
      rate = #{rate,jdbcType=VARCHAR},
      layer = #{layer,jdbcType=VARCHAR},
      traffic_id = #{trafficId,jdbcType=VARCHAR},
      hop = #{hop,jdbcType=INTEGER},
      length = #{length,jdbcType=INTEGER},
      value = #{value,jdbcType=INTEGER},
      success = #{success,jdbcType=INTEGER},
      reliability = #{reliability,jdbcType=DOUBLE},
      link_id = #{linkId,jdbcType=VARCHAR},
      route_sequence = #{routeSequence,jdbcType=INTEGER},
      source_id = #{sourceId,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      from_port_source_id = #{fromPortSourceId,jdbcType=VARCHAR},
      to_port_source_id = #{toPortSourceId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>